{
    "docs": [
        {
            "location": "/", 
            "text": "R\n\n\nR is a programming language and software environment for statistical computing and graphics supported by the R Foundation for Statistical Computing. The R language is widely used among statisticians and data miners for developing statistical software and data analysis. Polls, surveys of data miners, and studies of scholarly literature databases show that R's popularity has increased substantially in recent years.\n\n\nR is a GNU package. The source code for the R software environment is written primarily in C, Fortran, and R. R is freely available under the GNU General Public License, and pre-compiled binary versions are provided for various operating systems. While R has a command line interface, there are several graphical front-ends available.[\n\n\nR was created by \nRoss Ihaka\n and \nRobert Gentleman\n at the University of Auckland, New Zealand, and is currently developed by the R Development Core Team, of which Chambers is a member. R is named partly after the first names of the first two R authors and partly as a play on the name of S. The project was conceived in 1992, with an initial version released in 1995 and a stable beta version in 2000.\n\n\nBooks\n\n\n\n\n\n\n\n\nCourses", 
            "title": "Home"
        }, 
        {
            "location": "/#r", 
            "text": "R is a programming language and software environment for statistical computing and graphics supported by the R Foundation for Statistical Computing. The R language is widely used among statisticians and data miners for developing statistical software and data analysis. Polls, surveys of data miners, and studies of scholarly literature databases show that R's popularity has increased substantially in recent years.  R is a GNU package. The source code for the R software environment is written primarily in C, Fortran, and R. R is freely available under the GNU General Public License, and pre-compiled binary versions are provided for various operating systems. While R has a command line interface, there are several graphical front-ends available.[  R was created by  Ross Ihaka  and  Robert Gentleman  at the University of Auckland, New Zealand, and is currently developed by the R Development Core Team, of which Chambers is a member. R is named partly after the first names of the first two R authors and partly as a play on the name of S. The project was conceived in 1992, with an initial version released in 1995 and a stable beta version in 2000.", 
            "title": "R"
        }, 
        {
            "location": "/#books", 
            "text": "", 
            "title": "Books"
        }, 
        {
            "location": "/#courses", 
            "text": "", 
            "title": "Courses"
        }, 
        {
            "location": "/introduction/", 
            "text": "R Courses\n\n\nI'm going to give a course about R, but it's take a lot of time to finish. I will give at least one lesson a week. You can track it here\n\n\n\n    \n(next) Data\u00a0visualization with R\n\n    \nEverything you need to know about R\n\n    \nRead and Write Data\n\n\n\n    \nImporting data from JSON into R\n\n\n\n\n\n    \nManipulate Data\n\n    \nManipulate String and Datetime\n\n\n\n\n\nActually, beside my works, there are a lot of excellent and free courses in the internet for you\n\n\nBeginner\n\n\ntryr from codeschool\n\n\ntryr is a course for beginners created by codeschool. This course contains\u00a0R Syntax, Vectors, Matrices, Summary Statistics, Factors, Data Frames and Working With Real-World Data sections.\n\n\nIntroduction to R from datacamp\n\n\nThis course created by datacamp - a \"online learning platform that focuses on building the best learning experience for Data Science in specific\". Here is the introduction about this course quoted from\u00a0authors \"In this introduction to R, you will master the basics of this beautiful open source language such as factors, lists and data frames. With the knowledge gained in this course, you will be ready to undertake your first very own data analysis.\" It contains 6 chapters:\u00a0Intro to basics, Vectors, Matrices, Factors, Data frames and Lists.\n\n\nIntermediate and Advanced\n\n\nR Programming of\u00a0Johns Hopkins University in coursera\n Learn how to program in R and how to use R for effective data analysis. This is the second course in the \nJohns Hopkins Data Science Specialization\n. It's a 4-weeks course, contains:\u00a0Overview of R, R data types and objects, reading and writing data (week 1), \u00a0Control structures, functions, scoping rules, dates and times (week 2),\u00a0Loop functions, debugging tools (week 3) and\u00a0Simulation, code profiling (week 4)\n\n\n An Introduction to Statistical Learning with Applications in R of two experts Trevor Hastie and Rob Tibshirani\u00a0from Standfor Unitiversity\n\n\nThis course was introduced by Kevin Markham in r-blogger in september 2014. \"I found it to be an excellent course in statistical learning (also known as \u201cmachine learning\u201d), largely due to the high quality of both the textbook and the video lectures. And as an R user, it was extremely helpful that they included R code to demonstrate most of the techniques described in the book.\" In this course you will learn about\u00a0Statistical Learning,\u00a0Linear Regression,\u00a0Classification,\u00a0Resampling Methods,\u00a0Linear Model Selection and Regularization,\u00a0Moving Beyond Linearity,\u00a0Tree-Based Methods,\u00a0Support Vector Machines and\u00a0Unsupervised Learning\n\n\n\n\nCheatsheet \u2013 Python \n R codes for common Machine Learning Algorithms", 
            "title": "Introduction"
        }, 
        {
            "location": "/introduction/#r-courses", 
            "text": "I'm going to give a course about R, but it's take a lot of time to finish. I will give at least one lesson a week. You can track it here  \n     (next) Data\u00a0visualization with R \n     Everything you need to know about R \n     Read and Write Data  \n     Importing data from JSON into R   \n     Manipulate Data \n     Manipulate String and Datetime   Actually, beside my works, there are a lot of excellent and free courses in the internet for you  Beginner  tryr from codeschool  tryr is a course for beginners created by codeschool. This course contains\u00a0R Syntax, Vectors, Matrices, Summary Statistics, Factors, Data Frames and Working With Real-World Data sections.  Introduction to R from datacamp  This course created by datacamp - a \"online learning platform that focuses on building the best learning experience for Data Science in specific\". Here is the introduction about this course quoted from\u00a0authors \"In this introduction to R, you will master the basics of this beautiful open source language such as factors, lists and data frames. With the knowledge gained in this course, you will be ready to undertake your first very own data analysis.\" It contains 6 chapters:\u00a0Intro to basics, Vectors, Matrices, Factors, Data frames and Lists.  Intermediate and Advanced  R Programming of\u00a0Johns Hopkins University in coursera  Learn how to program in R and how to use R for effective data analysis. This is the second course in the  Johns Hopkins Data Science Specialization . It's a 4-weeks course, contains:\u00a0Overview of R, R data types and objects, reading and writing data (week 1), \u00a0Control structures, functions, scoping rules, dates and times (week 2),\u00a0Loop functions, debugging tools (week 3) and\u00a0Simulation, code profiling (week 4)   An Introduction to Statistical Learning with Applications in R of two experts Trevor Hastie and Rob Tibshirani\u00a0from Standfor Unitiversity  This course was introduced by Kevin Markham in r-blogger in september 2014. \"I found it to be an excellent course in statistical learning (also known as \u201cmachine learning\u201d), largely due to the high quality of both the textbook and the video lectures. And as an R user, it was extremely helpful that they included R code to demonstrate most of the techniques described in the book.\" In this course you will learn about\u00a0Statistical Learning,\u00a0Linear Regression,\u00a0Classification,\u00a0Resampling Methods,\u00a0Linear Model Selection and Regularization,\u00a0Moving Beyond Linearity,\u00a0Tree-Based Methods,\u00a0Support Vector Machines and\u00a0Unsupervised Learning   Cheatsheet \u2013 Python   R codes for common Machine Learning Algorithms", 
            "title": "R Courses"
        }, 
        {
            "location": "/everything you need to know about r/", 
            "text": "Everything you need to know about R\n\n\nIn this post I maintain all useful references for someone want to write nice R code.\n\n\nGoogle\u2019s R Style Guide at google\n\n\nR is a high-level programming language used primarily for statistical computing and graphics. The goal of the R Programming Style Guide is to make our R code easier to read, share, and verify. The rules below were designed in collaboration with the entire R user community at Google.\n\n\nInstalling R packages at r-bloggers\n\n\nhttps://www.r-bloggers.com/installing-r-packages/\n\n\nThis is a short post giving steps on how to actually install R packages.\n\n\nManaging your projects in a reproducible fashion at nicercode\n\n\nhttps://nicercode.github.io/blog/2013-04-05-projects/\n\n\nManaging your projects in a reproducible fashion doesn\u2019t just make your science reproducible, it makes your life easier.\n\n\nCreating R Packages\n\n\nhttp://cran.r-project.org/doc/contrib/Leisch-CreatingPackages.pdf\n\n\nThis tutorial gives a practical introduction to creating R packages. We discuss how object oriented programming and S formulas can be used to give R code the usual look and feel, how to start a package from a collection of R functions, and how to test the code once the package has been created. As running example we use functions for standard linear regression analysis which are developed from scratch\n\n\nHow to write trycatch in R\n\n\nhttp://stackoverflow.com/questions/12193779/how-to-write-trycatch-in-r\n\n\nWelcome to the R world \ud83d\ude09\n\n\nDebugging with RStudio\n\n\nhttps://support.rstudio.com/hc/en-us/articles/200713843-Debugging-with-RStudio\n\n\nRStudio includes a visual debugger that can help you understand code and find bugs.\n\n\nOptimising code\n\n\nhttp://adv-r.had.co.nz/Profiling.html#performance-profiling\n\n\nOptimising code to make it run faster is an iterative process:\n\n\nFind the biggest bottleneck (the slowest part of your code).\nTry to eliminate it (you may not succeed but that\u2019s ok).\nRepeat until your code is \u201cfast enough.\u201d\nThis sounds easy, but it\u2019s not.", 
            "title": "Everything you need to know about R"
        }, 
        {
            "location": "/everything you need to know about r/#everything-you-need-to-know-about-r", 
            "text": "In this post I maintain all useful references for someone want to write nice R code.", 
            "title": "Everything you need to know about R"
        }, 
        {
            "location": "/everything you need to know about r/#googles-r-style-guide-at-google", 
            "text": "R is a high-level programming language used primarily for statistical computing and graphics. The goal of the R Programming Style Guide is to make our R code easier to read, share, and verify. The rules below were designed in collaboration with the entire R user community at Google.", 
            "title": "Google\u2019s R Style Guide at google"
        }, 
        {
            "location": "/everything you need to know about r/#installing-r-packages-at-r-bloggers", 
            "text": "https://www.r-bloggers.com/installing-r-packages/  This is a short post giving steps on how to actually install R packages.", 
            "title": "Installing R packages at r-bloggers"
        }, 
        {
            "location": "/everything you need to know about r/#managing-your-projects-in-a-reproducible-fashion-at-nicercode", 
            "text": "https://nicercode.github.io/blog/2013-04-05-projects/  Managing your projects in a reproducible fashion doesn\u2019t just make your science reproducible, it makes your life easier.", 
            "title": "Managing your projects in a reproducible fashion at nicercode"
        }, 
        {
            "location": "/everything you need to know about r/#creating-r-packages", 
            "text": "http://cran.r-project.org/doc/contrib/Leisch-CreatingPackages.pdf  This tutorial gives a practical introduction to creating R packages. We discuss how object oriented programming and S formulas can be used to give R code the usual look and feel, how to start a package from a collection of R functions, and how to test the code once the package has been created. As running example we use functions for standard linear regression analysis which are developed from scratch", 
            "title": "Creating R Packages"
        }, 
        {
            "location": "/everything you need to know about r/#how-to-write-trycatch-in-r", 
            "text": "http://stackoverflow.com/questions/12193779/how-to-write-trycatch-in-r  Welcome to the R world \ud83d\ude09", 
            "title": "How to write trycatch in R"
        }, 
        {
            "location": "/everything you need to know about r/#debugging-with-rstudio", 
            "text": "https://support.rstudio.com/hc/en-us/articles/200713843-Debugging-with-RStudio  RStudio includes a visual debugger that can help you understand code and find bugs.", 
            "title": "Debugging with RStudio"
        }, 
        {
            "location": "/everything you need to know about r/#optimising-code", 
            "text": "http://adv-r.had.co.nz/Profiling.html#performance-profiling  Optimising code to make it run faster is an iterative process:  Find the biggest bottleneck (the slowest part of your code).\nTry to eliminate it (you may not succeed but that\u2019s ok).\nRepeat until your code is \u201cfast enough.\u201d\nThis sounds easy, but it\u2019s not.", 
            "title": "Optimising code"
        }
    ]
}